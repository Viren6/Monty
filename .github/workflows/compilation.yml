name: Compilation
on:
  workflow_call:
    inputs:
      matrix:
        type: string
        required: true
jobs:
  Compilation:
    name: ${{ matrix.config.name }} ${{ matrix.binaries }}
    runs-on: ${{ matrix.config.os }}
    env:
      COMPILER: ${{ matrix.config.compiler }}
      EXT: ${{ matrix.config.ext }}
      NAME: ${{ matrix.config.simple_name }}
      BINARY: ${{ matrix.binaries }}
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(inputs.matrix) }}
    defaults:
      run:
        working-directory: .  
        shell: ${{ matrix.config.shell }}
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install required Rust targets
        run: |
          rustup target add $BINARY

      - name: Build Monty with embed feature
        run: make embed  # Ensure this is run in the correct directory

      - name: Compile ${{ matrix.config.binaries }} build
        run: |
          cargo clean
          cargo build --release --target $BINARY

          # Define the actual binary path based on the crate name
          BINARY_PATH="target/$BINARY/release/monty$EXT"

          # Ensure the binary exists before attempting to move it
          if [ -f "$BINARY_PATH" ]; then
            mv "$BINARY_PATH" "../${{ matrix.config.simple_name }}-$BINARY$EXT"
          else
            echo "Error: Binary not found at $BINARY_PATH"
            exit 1
          fi

      - name: Remove non src files
        run: git clean -fx

      - name: Upload artifact for (pre)-release
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.config.simple_name }} ${{ matrix.binaries }}
          path: |
             .
             !.git
             !.output
